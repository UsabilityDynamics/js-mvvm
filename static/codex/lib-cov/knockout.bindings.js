/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['knockout.bindings.js']) {
  _$jscoverage['knockout.bindings.js'] = [];
  _$jscoverage['knockout.bindings.js'][11] = 0;
  _$jscoverage['knockout.bindings.js'][12] = 0;
  _$jscoverage['knockout.bindings.js'][13] = 0;
  _$jscoverage['knockout.bindings.js'][15] = 0;
  _$jscoverage['knockout.bindings.js'][25] = 0;
  _$jscoverage['knockout.bindings.js'][29] = 0;
  _$jscoverage['knockout.bindings.js'][36] = 0;
  _$jscoverage['knockout.bindings.js'][38] = 0;
  _$jscoverage['knockout.bindings.js'][39] = 0;
  _$jscoverage['knockout.bindings.js'][40] = 0;
  _$jscoverage['knockout.bindings.js'][41] = 0;
  _$jscoverage['knockout.bindings.js'][43] = 0;
  _$jscoverage['knockout.bindings.js'][52] = 0;
  _$jscoverage['knockout.bindings.js'][55] = 0;
  _$jscoverage['knockout.bindings.js'][56] = 0;
  _$jscoverage['knockout.bindings.js'][62] = 0;
  _$jscoverage['knockout.bindings.js'][63] = 0;
  _$jscoverage['knockout.bindings.js'][66] = 0;
  _$jscoverage['knockout.bindings.js'][68] = 0;
  _$jscoverage['knockout.bindings.js'][70] = 0;
  _$jscoverage['knockout.bindings.js'][72] = 0;
  _$jscoverage['knockout.bindings.js'][73] = 0;
  _$jscoverage['knockout.bindings.js'][75] = 0;
  _$jscoverage['knockout.bindings.js'][77] = 0;
  _$jscoverage['knockout.bindings.js'][78] = 0;
  _$jscoverage['knockout.bindings.js'][80] = 0;
  _$jscoverage['knockout.bindings.js'][86] = 0;
  _$jscoverage['knockout.bindings.js'][88] = 0;
  _$jscoverage['knockout.bindings.js'][89] = 0;
  _$jscoverage['knockout.bindings.js'][90] = 0;
  _$jscoverage['knockout.bindings.js'][94] = 0;
  _$jscoverage['knockout.bindings.js'][98] = 0;
  _$jscoverage['knockout.bindings.js'][112] = 0;
  _$jscoverage['knockout.bindings.js'][114] = 0;
  _$jscoverage['knockout.bindings.js'][122] = 0;
  _$jscoverage['knockout.bindings.js'][123] = 0;
  _$jscoverage['knockout.bindings.js'][126] = 0;
  _$jscoverage['knockout.bindings.js'][127] = 0;
  _$jscoverage['knockout.bindings.js'][130] = 0;
  _$jscoverage['knockout.bindings.js'][131] = 0;
  _$jscoverage['knockout.bindings.js'][132] = 0;
  _$jscoverage['knockout.bindings.js'][133] = 0;
  _$jscoverage['knockout.bindings.js'][134] = 0;
  _$jscoverage['knockout.bindings.js'][137] = 0;
  _$jscoverage['knockout.bindings.js'][138] = 0;
  _$jscoverage['knockout.bindings.js'][139] = 0;
  _$jscoverage['knockout.bindings.js'][140] = 0;
  _$jscoverage['knockout.bindings.js'][141] = 0;
  _$jscoverage['knockout.bindings.js'][145] = 0;
  _$jscoverage['knockout.bindings.js'][146] = 0;
  _$jscoverage['knockout.bindings.js'][148] = 0;
  _$jscoverage['knockout.bindings.js'][149] = 0;
  _$jscoverage['knockout.bindings.js'][152] = 0;
  _$jscoverage['knockout.bindings.js'][153] = 0;
  _$jscoverage['knockout.bindings.js'][154] = 0;
  _$jscoverage['knockout.bindings.js'][155] = 0;
  _$jscoverage['knockout.bindings.js'][159] = 0;
  _$jscoverage['knockout.bindings.js'][160] = 0;
  _$jscoverage['knockout.bindings.js'][161] = 0;
  _$jscoverage['knockout.bindings.js'][166] = 0;
  _$jscoverage['knockout.bindings.js'][167] = 0;
  _$jscoverage['knockout.bindings.js'][170] = 0;
  _$jscoverage['knockout.bindings.js'][171] = 0;
  _$jscoverage['knockout.bindings.js'][172] = 0;
  _$jscoverage['knockout.bindings.js'][176] = 0;
  _$jscoverage['knockout.bindings.js'][178] = 0;
  _$jscoverage['knockout.bindings.js'][180] = 0;
  _$jscoverage['knockout.bindings.js'][182] = 0;
  _$jscoverage['knockout.bindings.js'][183] = 0;
  _$jscoverage['knockout.bindings.js'][187] = 0;
  _$jscoverage['knockout.bindings.js'][188] = 0;
  _$jscoverage['knockout.bindings.js'][199] = 0;
  _$jscoverage['knockout.bindings.js'][201] = 0;
  _$jscoverage['knockout.bindings.js'][202] = 0;
  _$jscoverage['knockout.bindings.js'][203] = 0;
  _$jscoverage['knockout.bindings.js'][204] = 0;
  _$jscoverage['knockout.bindings.js'][205] = 0;
  _$jscoverage['knockout.bindings.js'][206] = 0;
  _$jscoverage['knockout.bindings.js'][209] = 0;
  _$jscoverage['knockout.bindings.js'][210] = 0;
  _$jscoverage['knockout.bindings.js'][226] = 0;
  _$jscoverage['knockout.bindings.js'][229] = 0;
  _$jscoverage['knockout.bindings.js'][230] = 0;
  _$jscoverage['knockout.bindings.js'][233] = 0;
  _$jscoverage['knockout.bindings.js'][234] = 0;
  _$jscoverage['knockout.bindings.js'][235] = 0;
  _$jscoverage['knockout.bindings.js'][239] = 0;
  _$jscoverage['knockout.bindings.js'][240] = 0;
  _$jscoverage['knockout.bindings.js'][245] = 0;
  _$jscoverage['knockout.bindings.js'][248] = 0;
  _$jscoverage['knockout.bindings.js'][249] = 0;
  _$jscoverage['knockout.bindings.js'][252] = 0;
  _$jscoverage['knockout.bindings.js'][254] = 0;
  _$jscoverage['knockout.bindings.js'][255] = 0;
  _$jscoverage['knockout.bindings.js'][263] = 0;
  _$jscoverage['knockout.bindings.js'][265] = 0;
  _$jscoverage['knockout.bindings.js'][266] = 0;
  _$jscoverage['knockout.bindings.js'][267] = 0;
  _$jscoverage['knockout.bindings.js'][268] = 0;
  _$jscoverage['knockout.bindings.js'][279] = 0;
  _$jscoverage['knockout.bindings.js'][281] = 0;
  _$jscoverage['knockout.bindings.js'][291] = 0;
  _$jscoverage['knockout.bindings.js'][293] = 0;
  _$jscoverage['knockout.bindings.js'][294] = 0;
  _$jscoverage['knockout.bindings.js'][295] = 0;
  _$jscoverage['knockout.bindings.js'][297] = 0;
}
_$jscoverage['knockout.bindings.js'][11]++;
(function (factory) {
  _$jscoverage['knockout.bindings.js'][12]++;
  if (typeof define === "function" && define.amd) {
    _$jscoverage['knockout.bindings.js'][13]++;
    define(["knockout", "jquery", "jquery.ui.sortable"], factory);
  }
  else {
    _$jscoverage['knockout.bindings.js'][15]++;
    factory(window.ko, jQuery);
  }
})((function (ko, $, undefined) {
  _$jscoverage['knockout.bindings.js'][25]++;
  ko.bindingHandlers.sortable = {init: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
}), update: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['knockout.bindings.js'][29]++;
  jQuery(element).sortable(valueAccessor());
})};
  _$jscoverage['knockout.bindings.js'][36]++;
  ko.bindingHandlers.enter_key = {init: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['knockout.bindings.js'][38]++;
  jQuery(element).keypress((function (event) {
  _$jscoverage['knockout.bindings.js'][39]++;
  var keyCode = (event.which? event.which: event.keyCode);
  _$jscoverage['knockout.bindings.js'][40]++;
  if (keyCode === 13) {
    _$jscoverage['knockout.bindings.js'][41]++;
    return false;
  }
  _$jscoverage['knockout.bindings.js'][43]++;
  return true;
}));
})};
  _$jscoverage['knockout.bindings.js'][52]++;
  ko.bindingHandlers.tabbed = {init: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['knockout.bindings.js'][55]++;
  ko.utils.domNodeDisposal.addDisposeCallback(element, (function () {
  _$jscoverage['knockout.bindings.js'][56]++;
  jQuery(element).tabs("destroy");
}));
}), update: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['knockout.bindings.js'][62]++;
  jQuery(element).bind("tabsselect", (function (event, ui) {
  _$jscoverage['knockout.bindings.js'][63]++;
  wpp.attributes_tab_index = ui.index - 1;
}));
  _$jscoverage['knockout.bindings.js'][66]++;
  setTimeout((function () {
  _$jscoverage['knockout.bindings.js'][68]++;
  try {
    _$jscoverage['knockout.bindings.js'][70]++;
    var elem = jQuery(element);
    _$jscoverage['knockout.bindings.js'][72]++;
    if (elem.is(":ui-tabs")) {
      _$jscoverage['knockout.bindings.js'][73]++;
      elem.tabs("destroy");
    }
    _$jscoverage['knockout.bindings.js'][75]++;
    var $tabs = elem.tabs();
    _$jscoverage['knockout.bindings.js'][77]++;
    $tabs.tabs("option", "selected", (wpp.attributes_tab_index !== "undefined"? wpp.attributes_tab_index: 0));
    _$jscoverage['knockout.bindings.js'][78]++;
    if (typeof allBindingsAccessor().droppable !== "undefined") {
      _$jscoverage['knockout.bindings.js'][80]++;
      var defaults = {list: ".connectedSortable", accept: ".connectedSortable li", hoverClass: "ui-state-hover"};
      _$jscoverage['knockout.bindings.js'][86]++;
      var data = jQuery.extend(defaults, allBindingsAccessor().droppable);
      _$jscoverage['knockout.bindings.js'][88]++;
      data.drop = (function (event, ui) {
  _$jscoverage['knockout.bindings.js'][89]++;
  if (typeof data.drop_cb == "function") {
    _$jscoverage['knockout.bindings.js'][90]++;
    data.drop_cb(event, ui, viewModel);
  }
});
      _$jscoverage['knockout.bindings.js'][94]++;
      jQuery("ul:first li", $tabs).droppable(data);
    }
  }
  catch (e) {
    _$jscoverage['knockout.bindings.js'][98]++;
    wpp.log("ko.bindingHandlers.tabbed", e.message);
  }
}), 200);
})};
  _$jscoverage['knockout.bindings.js'][112]++;
  ko.bindingHandlers.unique_slug = {init: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['knockout.bindings.js'][114]++;
  var settings = jQuery.extend({"slug": false, "text": false, "instance": false, "storage": false, "value_to_slug": false}, valueAccessor());
  _$jscoverage['knockout.bindings.js'][122]++;
  if (! settings.slug || ! settings.text || ! settings.instance) {
    _$jscoverage['knockout.bindings.js'][123]++;
    return false;
  }
  _$jscoverage['knockout.bindings.js'][126]++;
  if (typeof settings.slug === "undefined" || typeof settings.text === "undefined") {
    _$jscoverage['knockout.bindings.js'][127]++;
    return false;
  }
  _$jscoverage['knockout.bindings.js'][130]++;
  var create_slug = (function (slug) {
  _$jscoverage['knockout.bindings.js'][131]++;
  slug = slug.replace(/[^a-zA-Z0-9_\s]/g, "");
  _$jscoverage['knockout.bindings.js'][132]++;
  slug = slug.toLowerCase();
  _$jscoverage['knockout.bindings.js'][133]++;
  slug = slug.replace(/\s/g, "_");
  _$jscoverage['knockout.bindings.js'][134]++;
  return slug;
});
  _$jscoverage['knockout.bindings.js'][137]++;
  if (settings.storage) {
    _$jscoverage['knockout.bindings.js'][138]++;
    if (typeof window.__ud_slug_storage == "undefined") {
      _$jscoverage['knockout.bindings.js'][138]++;
      window.__ud_slug_storage = {};
    }
    _$jscoverage['knockout.bindings.js'][139]++;
    if (typeof window.__ud_slug_storage[settings.instance] == "undefined") {
      _$jscoverage['knockout.bindings.js'][139]++;
      window.__ud_slug_storage[settings.instance] = [];
    }
    _$jscoverage['knockout.bindings.js'][140]++;
    if (window.__ud_slug_storage[settings.instance].indexOf(settings.slug()) == -1) {
      _$jscoverage['knockout.bindings.js'][141]++;
      window.__ud_slug_storage[settings.instance].push(settings.slug());
    }
  }
  _$jscoverage['knockout.bindings.js'][145]++;
  jQuery(element).addClass(settings.instance).data("slug", settings.slug()).change((function () {
  _$jscoverage['knockout.bindings.js'][146]++;
  var self = this, val = jQuery(this).val(), slug = create_slug(val), exist = false;
  _$jscoverage['knockout.bindings.js'][148]++;
  if (slug === "") {
    _$jscoverage['knockout.bindings.js'][149]++;
    slug = "random";
  }
  _$jscoverage['knockout.bindings.js'][152]++;
  if (settings.storage) {
    _$jscoverage['knockout.bindings.js'][153]++;
    if (typeof window.__ud_slug_storage[settings.instance] !== "undefined") {
      _$jscoverage['knockout.bindings.js'][154]++;
      if (window.__ud_slug_storage[settings.instance].indexOf(slug) != -1) {
        _$jscoverage['knockout.bindings.js'][155]++;
        exist = true;
      }
    }
  }
  else {
    _$jscoverage['knockout.bindings.js'][159]++;
    jQuery("." + settings.instance).each((function (i, e) {
  _$jscoverage['knockout.bindings.js'][160]++;
  if (e !== self && slug === jQuery(e).data("slug")) {
    _$jscoverage['knockout.bindings.js'][161]++;
    exist = true;
  }
}));
  }
  _$jscoverage['knockout.bindings.js'][166]++;
  if (exist) {
    _$jscoverage['knockout.bindings.js'][167]++;
    slug += "_" + (Math.floor(Math.random() * (99000000)) + 1000000);
  }
  _$jscoverage['knockout.bindings.js'][170]++;
  if (typeof viewModel.new_item == "function") {
    _$jscoverage['knockout.bindings.js'][171]++;
    if (! viewModel.new_item()) {
      _$jscoverage['knockout.bindings.js'][172]++;
      return false;
    }
  }
  _$jscoverage['knockout.bindings.js'][176]++;
  if (typeof settings.slug === "function") {
    _$jscoverage['knockout.bindings.js'][176]++;
    settings.slug(slug);
  }
  else {
    _$jscoverage['knockout.bindings.js'][176]++;
    settings.slug = slug;
  }
  _$jscoverage['knockout.bindings.js'][178]++;
  if (typeof settings.text === "function") {
    _$jscoverage['knockout.bindings.js'][178]++;
    settings.text(val);
  }
  else {
    _$jscoverage['knockout.bindings.js'][178]++;
    settings.text = val;
  }
  _$jscoverage['knockout.bindings.js'][180]++;
  jQuery(self).data("slug", slug);
  _$jscoverage['knockout.bindings.js'][182]++;
  if (settings.value_to_slug && slug !== "random") {
    _$jscoverage['knockout.bindings.js'][183]++;
    jQuery(self).val(slug);
  }
}));
  _$jscoverage['knockout.bindings.js'][187]++;
  setTimeout((function () {
  _$jscoverage['knockout.bindings.js'][188]++;
  jQuery(element).trigger("change");
}), 100);
})};
  _$jscoverage['knockout.bindings.js'][199]++;
  ko.bindingHandlers.select = {init: (function (element, valueAccessor, allBindingsAccessor) {
  _$jscoverage['knockout.bindings.js'][201]++;
  var obj = valueAccessor(), allBindings = allBindingsAccessor(), lookupKey = allBindings.lookupKey;
  _$jscoverage['knockout.bindings.js'][202]++;
  jQuery(element).select2(obj);
  _$jscoverage['knockout.bindings.js'][203]++;
  if (lookupKey) {
    _$jscoverage['knockout.bindings.js'][204]++;
    var value = ko.utils.unwrapObservable(allBindings.value);
    _$jscoverage['knockout.bindings.js'][205]++;
    jQuery(element).select2("data", ko.utils.arrayFirst(obj.data.results, (function (item) {
  _$jscoverage['knockout.bindings.js'][206]++;
  return item[lookupKey] === value;
})));
  }
  _$jscoverage['knockout.bindings.js'][209]++;
  ko.utils.domNodeDisposal.addDisposeCallback(element, (function () {
  _$jscoverage['knockout.bindings.js'][210]++;
  jQuery(element).select2("destroy");
}));
}), update: (function (element) {
})};
  _$jscoverage['knockout.bindings.js'][226]++;
  ko.bindingHandlers.datepicker = {init: (function (element, valueAccessor, allBindingsAccessor) {
  _$jscoverage['knockout.bindings.js'][229]++;
  var options = allBindingsAccessor().datepickerOptions || {};
  _$jscoverage['knockout.bindings.js'][230]++;
  jQuery(element).datepicker(options);
  _$jscoverage['knockout.bindings.js'][233]++;
  ko.utils.registerEventHandler(element, "change", (function () {
  _$jscoverage['knockout.bindings.js'][234]++;
  var observable = valueAccessor();
  _$jscoverage['knockout.bindings.js'][235]++;
  observable(jQuery(element).datepicker("getDate"));
}));
  _$jscoverage['knockout.bindings.js'][239]++;
  ko.utils.domNodeDisposal.addDisposeCallback(element, (function () {
  _$jscoverage['knockout.bindings.js'][240]++;
  jQuery(element).datepicker("destroy");
}));
}), update: (function (element, valueAccessor) {
  _$jscoverage['knockout.bindings.js'][245]++;
  var value = ko.utils.unwrapObservable(valueAccessor());
  _$jscoverage['knockout.bindings.js'][248]++;
  if (String(value).indexOf("/Date(") == 0) {
    _$jscoverage['knockout.bindings.js'][249]++;
    value = new Date(parseInt(value.replace(/\/Date\((.*?)\)\//gi, "$1")));
  }
  _$jscoverage['knockout.bindings.js'][252]++;
  var current = jQuery(element).datepicker("getDate");
  _$jscoverage['knockout.bindings.js'][254]++;
  if (value - current !== 0) {
    _$jscoverage['knockout.bindings.js'][255]++;
    jQuery(element).datepicker("setDate", value);
  }
})};
  _$jscoverage['knockout.bindings.js'][263]++;
  ko.bindingHandlers.lazyload = {init: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['knockout.bindings.js'][265]++;
  var options = valueAccessor() || {};
  _$jscoverage['knockout.bindings.js'][266]++;
  jQuery(element).lazyload(options);
  _$jscoverage['knockout.bindings.js'][267]++;
  ko.utils.domNodeDisposal.addDisposeCallback(element, (function () {
  _$jscoverage['knockout.bindings.js'][268]++;
  jQuery(element).unbind();
}));
})};
  _$jscoverage['knockout.bindings.js'][279]++;
  ko.bindingHandlers.help = {init: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['knockout.bindings.js'][281]++;
  jQuery(element).addClass("wpp_help wpp_button").append("<span class=\"wpp_icon wpp_icon_106\"></span>").append("<div class=\"wpp_description\"></div>").find(".wpp_description").html(valueAccessor());
})};
  _$jscoverage['knockout.bindings.js'][291]++;
  ko.bindingHandlers.console = {init: (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['knockout.bindings.js'][293]++;
  var d = valueAccessor();
  _$jscoverage['knockout.bindings.js'][294]++;
  if (typeof d === "function") {
    _$jscoverage['knockout.bindings.js'][295]++;
    console.log("observable", d());
  }
  else {
    _$jscoverage['knockout.bindings.js'][297]++;
    console.log("static", d);
  }
})};
}));
_$jscoverage['knockout.bindings.js'].source = ["/**"," * UD Handlers for Knockout JS"," *"," * @version 1.0"," * @description Set of bindingHandlers for Knockout library"," * @package Knockout"," * @subpackage UD"," * @dependencies jquery, knockout-mapping"," * @author team@UD"," */","(function ( factory ) {","  if ( typeof define === \"function\" &amp;&amp; define.amd ) {","    define( [ \"knockout\", \"jquery\", \"jquery.ui.sortable\" ], factory );","  } else {","    factory( window.ko, jQuery );","  }","})","","( function ( ko, $, undefined ) {","","  /**","   * Binding for Sortable items","   * @author korotkov@ud","   */","  ko.bindingHandlers.sortable = {","    init: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","    },","    update: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","      jQuery( element ).sortable( valueAccessor() );","    }","  };","","  /**","   * Prevent form submit on enter key","   */","  ko.bindingHandlers.enter_key = {","    init: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","      jQuery( element ).keypress( function ( event ) {","        var keyCode = (event.which ? event.which : event.keyCode);","        if ( keyCode === 13 ) {","          return false;","        }","        return true;","      } );","    }","  };","","  /**","   * Binding for Tabs","   * @author korotkov@ud","   */","  ko.bindingHandlers.tabbed = {","    init: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","","      ko.utils.domNodeDisposal.addDisposeCallback( element, function () {","        jQuery( element ).tabs( \"destroy\" );","      } );","","    },","    update: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","","      jQuery( element ).bind( \"tabsselect\", function ( event, ui ) {","        wpp.attributes_tab_index = ui.index - 1;","      } );","","      setTimeout( function () {","","        try {","","          var elem = jQuery( element );","","          if ( elem.is( ':ui-tabs' ) )","            elem.tabs( \"destroy\" );","","          var $tabs = elem.tabs();","","          $tabs.tabs( \"option\", \"selected\", (wpp.attributes_tab_index !== 'undefined' ? wpp.attributes_tab_index : 0) );","          if ( typeof allBindingsAccessor().droppable !== 'undefined' ) {","","            var defaults = {","              list: '.connectedSortable',","              accept: '.connectedSortable li',","              hoverClass: 'ui-state-hover'","            };","","            var data = jQuery.extend( defaults, allBindingsAccessor().droppable );","","            data.drop = function ( event, ui ) {","              if ( typeof data.drop_cb == 'function' ) {","                data.drop_cb( event, ui, viewModel );","              }","            }","","            jQuery( \"ul:first li\", $tabs ).droppable( data );","          }","","        } catch ( e ) {","          wpp.log( 'ko.bindingHandlers.tabbed', e.message );","        }","","      }, 200 );","    }","  };","","  /**","   * Generates unique slug on fly","   *","   * Example: &lt;input type=\"text\" data-bind=\" unique_slug: { slug: 'slug', text: 'label', instance: 'some_unique_name' } \" /&gt;","   *","   * @author peshkov@UD","   */","  ko.bindingHandlers.unique_slug = {","    init: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","      var settings = jQuery.extend( {","        'slug': false, // viewmodel[ settings.slug ]","        'text': false, // viewmodel[ settings.label ]","        'instance': false, // unique class which will be added to label field to determine list of related data ( other label fields )","        'storage': false, // boolean","        'value_to_slug': false // Sets value to slug","      }, valueAccessor() );","      /* All settings args are required */","      if ( !settings.slug || !settings.text || !settings.instance ) {","        return false;","      }","      /* Links to slug and label data must be correct */","      if ( typeof settings.slug === 'undefined' || typeof settings.text === 'undefined' ) {","        return false;","      }","      /* Creates slug from string */","      var create_slug = function ( slug ) {","        slug = slug.replace( /[^a-zA-Z0-9_\\s]/g, \"\" );","        slug = slug.toLowerCase();","        slug = slug.replace( /\\s/g, '_' );","        return slug;","      };","      //** If need to be stored in variable */","      if ( settings.storage ) {","        if ( typeof window.__ud_slug_storage == 'undefined' ) window.__ud_slug_storage = {};","        if ( typeof window.__ud_slug_storage[settings.instance] == 'undefined' ) window.__ud_slug_storage[settings.instance] = [];","        if ( window.__ud_slug_storage[settings.instance].indexOf( settings.slug() ) == -1 ) {","          window.__ud_slug_storage[settings.instance].push( settings.slug() );","        }","      }","      /* Adds Bindings to the current element */","      jQuery( element ).addClass( settings.instance ).data( 'slug', settings.slug() ).change( function () {","        var self = this, val = jQuery( this ).val(), slug = create_slug( val ), exist = false;","        /* Be sure that slug is not empty */","        if ( slug === '' ) {","          slug = 'random';","        }","        /* Determine if slug is aready exist */","        if ( settings.storage ) {","          if ( typeof window.__ud_slug_storage[settings.instance] !== 'undefined' ) {","            if ( window.__ud_slug_storage[settings.instance].indexOf( slug ) != -1 ) {","              exist = true;","            }","          }","        } else {","          jQuery( '.' + settings.instance ).each( function ( i, e ) {","            if ( e !== self &amp;&amp; slug === jQuery( e ).data( 'slug' ) ) {","              exist = true;","            }","          } );","        }","        /* Set unique slug by unique ID adding. */","        if ( exist ) {","          slug += '_' + ( Math.floor( Math.random() * (99999999 - 1000000 + 1) ) + 1000000 )","        }","        /* Do not set slug again if item is not new */","        if ( typeof viewModel.new_item == 'function' ) {","          if ( !viewModel.new_item() ) {","            return false;","          }","        }","        /* Set slug */","        if ( typeof settings.slug === 'function' ) settings.slug( slug ); else settings.slug = slug;","        /* Re-set label using observable if needed */","        if ( typeof settings.text === 'function' ) settings.text( val ); else settings.text = val;","        /*  */","        jQuery( self ).data( 'slug', slug );","        /* */","        if ( settings.value_to_slug &amp;&amp; slug !== 'random' ) {","          jQuery( self ).val( slug );","        }","      } );","      /* Manually fire 'change' event to check slug of the current element on init */","      setTimeout( function () {","        jQuery( element ).trigger( 'change' )","      }, 100 );","    }","  }","","  /**","   * Utilizes Select2. Draws multiselect.","   *","   * @since 2.0","   * @author potanin@UD","   */","  ko.bindingHandlers.select = {","    init: function ( element, valueAccessor, allBindingsAccessor ) {","      var obj = valueAccessor(), allBindings = allBindingsAccessor(), lookupKey = allBindings.lookupKey;","      jQuery( element ).select2( obj );","      if ( lookupKey ) {","        var value = ko.utils.unwrapObservable( allBindings.value );","        jQuery( element ).select2( 'data', ko.utils.arrayFirst( obj.data.results, function ( item ) {","          return item[lookupKey] === value;","        } ) );","      }","      ko.utils.domNodeDisposal.addDisposeCallback( element, function () {","        jQuery( element ).select2( 'destroy' );","      } );","","    },","    update: function ( element ) {","      //jQuery(element).trigger('change');","    }","  };","","  /**","   * UI datepicker.","   *","   * Usage:","   * &lt;input data-bind=\"datepicker: myDate, datepickerOptions: { minDate: new Date() }\" /&gt;","   * myDate should be an observable valiable with value of Date() type","   */","  ko.bindingHandlers.datepicker = {","    init: function ( element, valueAccessor, allBindingsAccessor ) {","      //initialize datepicker with some optional options","      var options = allBindingsAccessor().datepickerOptions || {};","      jQuery( element ).datepicker( options );","","      //handle the field changing","      ko.utils.registerEventHandler( element, \"change\", function () {","        var observable = valueAccessor();","        observable( jQuery( element ).datepicker( \"getDate\" ) );","      } );","","      //handle disposal (if KO removes by the template binding)","      ko.utils.domNodeDisposal.addDisposeCallback( element, function () {","        jQuery( element ).datepicker( \"destroy\" );","      } );","","    },","    update: function ( element, valueAccessor ) {","      var value = ko.utils.unwrapObservable( valueAccessor() );","","      //handle date data coming via json from Microsoft","      if ( String( value ).indexOf( '/Date(' ) == 0 ) {","        value = new Date( parseInt( value.replace( /\\/Date\\((.*?)\\)\\//gi, \"$1\" ) ) );","      }","","      var current = jQuery( element ).datepicker( \"getDate\" );","","      if ( value - current !== 0 ) {","        jQuery( element ).datepicker( \"setDate\", value );","      }","    }","  };","","  /**","   * LazyLoad","   */","  ko.bindingHandlers.lazyload = {","    init: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","      var options = valueAccessor() || {};","      jQuery( element ).lazyload( options );","      ko.utils.domNodeDisposal.addDisposeCallback( element, function () {","        jQuery( element ).unbind();","      } );","    }","  };","","  /**","   * Renders 'help' Tooltip","   * It's just a helpfull wrapper for tooltip","   *","   * @author peshkov@UD","   */","  ko.bindingHandlers.help = {","    init: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","      jQuery( element ).addClass( 'wpp_help wpp_button' ).append( '&lt;span class=\"wpp_icon wpp_icon_106\"&gt;&lt;/span&gt;' ).append( '&lt;div class=\"wpp_description\"&gt;&lt;/div&gt;' ).find( '.wpp_description' ).html( valueAccessor() );","    }","  };","","  /**","   * Prints data to console","   * Can be used for troubleshooting","   *","   * @author peshkovUD","   */","  ko.bindingHandlers.console = {","    init: function ( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","      var d = valueAccessor();","      if ( typeof d === 'function' ) {","        console.log( 'observable', d() );","      } else {","        console.log( 'static', d );","      }","    }","  }","","} );","","",""];
